{
	"name": "fetch data from APIpipeline_jsondestination",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.Links",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "CopyFromAPI2BlobBronze",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"AbsoluteUrl": "$.info.next"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "arrayOfObjects"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"path": "id"
											}
										},
										{
											"source": {
												"path": "['name']"
											},
											"sink": {
												"path": "name"
											}
										},
										{
											"source": {
												"path": "['status']"
											},
											"sink": {
												"path": "status"
											}
										},
										{
											"source": {
												"path": "['species']"
											},
											"sink": {
												"path": "species"
											}
										},
										{
											"source": {
												"path": "['type']"
											},
											"sink": {
												"path": "type"
											}
										},
										{
											"source": {
												"path": "['gender']"
											},
											"sink": {
												"path": "gender"
											}
										},
										{
											"source": {
												"path": "['dimension']"
											},
											"sink": {
												"path": "dimension"
											}
										},
										{
											"source": {
												"path": "['origin']['name']"
											},
											"sink": {
												"path": "origin_name"
											}
										},
										{
											"source": {
												"path": "['origin']['url']"
											},
											"sink": {
												"path": "origin_url"
											}
										},
										{
											"source": {
												"path": "['location']['name']"
											},
											"sink": {
												"path": "location_name"
											}
										},
										{
											"source": {
												"path": "['location']['url']"
											},
											"sink": {
												"path": "location_url"
											}
										},
										{
											"source": {
												"path": "['image']"
											},
											"sink": {
												"path": "image_url"
											}
										},
										{
											"source": {
												"path": "['url']"
											},
											"sink": {
												"path": "url"
											}
										},
										{
											"source": {
												"path": "['created']"
											},
											"sink": {
												"path": "created"
											}
										}
									],
									"collectionReference": "$['results']"
								}
							},
							"inputs": [
								{
									"referenceName": "RestResourceRickyandMorty",
									"type": "DatasetReference",
									"parameters": {
										"url": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Json_weboutputDes",
									"type": "DatasetReference",
									"parameters": {
										"name": {
											"value": "@concat(item(),'s.json')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "DataflowSilver",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "CopyFromAPI2BlobBronze",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "loaddataflow_sql",
									"type": "DataFlowReference",
									"datasetParameters": {
										"source1": {
											"fname": {
												"value": "@concat(item(),'s.json')",
												"type": "Expression"
											}
										},
										"sink1": {
											"tbname": {
												"value": "@concat(item(),'s')",
												"type": "Expression"
											}
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					]
				}
			},
			{
				"name": "viewcreation",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "azsqldblink",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "CREATE VIEW cartoon_details AS\nSELECT \n    c.id,\n\tc.name,\n\tc.status,\n\tc.species,\n\tc.type,\n\tc.gender,\n\tc.image_url,\n\tc.url AS character_url,\n\tc.created AS  character_created,\n\tc.origin_name,\n\tc.origin_url,\n\tc.location_name,\n\tc.location_url,\n\tl.type AS location_type,\n\tl.dimension AS dimension_location,\n\tl.created AS location_created\n\nFROM \n    characters c\nJOIN \n    locations l ON  c.location_name = l.name;\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "viewcreation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from dbo.cartoon_details;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "azsqldb",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"Links": {
				"type": "array",
				"defaultValue": [
					"character",
					"location"
				]
			}
		},
		"annotations": []
	}
}