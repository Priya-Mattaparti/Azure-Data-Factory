{
	"name": "Auditlogpipelinemappingdataflow",
	"properties": {
		"activities": [
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 2
				}
			},
			{
				"name": "Set LogFile",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "logfile",
					"value": {
						"value": "@int(concat(formatDateTime(utcnow(),'yyyy-MM-dd'),'_log.csv'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Metadata Of LogFile",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Set LogFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Logauditsource",
						"type": "DatasetReference",
						"parameters": {
							"srclogfilename": {
								"value": "@variables('logfile')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Metadata Of LogFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Get Metadata Of LogFile').output.exists,true)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Data flow without logfile",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "Auditlogdataflowwithoutfile",
									"type": "DataFlowReference",
									"parameters": {
										"ADFName": {
											"value": "'@{pipeline().DataFactory}'",
											"type": "Expression"
										},
										"PipelineName": {
											"value": "'@{pipeline().Pipeline}'",
											"type": "Expression"
										},
										"Status": {
											"value": "'@{string('Success')}'",
											"type": "Expression"
										},
										"RunID": {
											"value": "'@{pipeline().RunId}'",
											"type": "Expression"
										},
										"TriggerName": {
											"value": "'@{pipeline().TriggerName}'",
											"type": "Expression"
										},
										"TriggerTime": {
											"value": "'@{pipeline().TriggerTime}'",
											"type": "Expression"
										},
										"LogFileName": {
											"value": "'@{variables('logfile')}'",
											"type": "Expression"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Data flow with logfile",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "Auditlogdataflowwithfile",
									"type": "DataFlowReference",
									"parameters": {
										"ADFName": {
											"value": "'@{pipeline().DataFactory}'",
											"type": "Expression"
										},
										"PipelineName": {
											"value": "'@{pipeline().Pipeline}'",
											"type": "Expression"
										},
										"Status": {
											"value": "'@{string('Success')}'",
											"type": "Expression"
										},
										"RunID": {
											"value": "'@{pipeline().RunId}'",
											"type": "Expression"
										},
										"TriggerName": {
											"value": "'@{pipeline().TriggerName}'",
											"type": "Expression"
										},
										"TriggerTime": {
											"value": "'@{pipeline().TriggerTime}'",
											"type": "Expression"
										},
										"LogFileName": {
											"value": "'@{variables('logfile')}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"logfilesource": {
											"srclogfilename": {
												"value": "@variables('logfile')",
												"type": "Expression"
											}
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					]
				}
			},
			{
				"name": "notify error",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"url": "https://prod-15.southindia.logic.azure.com:443/workflows/ecb0497422e041199050b83e97c4795b/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=QDxl6ZKeYPv0TyLEYEeR03ofAyE4AS2MBma0LGZQI7I",
					"body": {
						"value": "{\n    \"Pipeline\":\"@{pipeline().Pipeline}\",\n    \"ErrorMessage\":\"@{replace(variables('activityname'),'|','')}\",\n    \"DataFactoryName\":\"@{pipeline().DataFactory}\",\n    \"RunID\":\"@{pipeline().RunId}\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Failed",
							"Skipped"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "activityname",
					"value": {
						"value": "@concat(activity('Set LogFile')?.Error?.message,'|',activity('Get Metadata Of LogFile')?.Error?.message,'|',activity('Data flow with logfile')?.Error?.message,'|',activity('Data flow without logfile')?.Error?.message\n)",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"logfile": {
				"type": "String"
			},
			"activityname": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-05-27T09:33:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}